var path = require("path");var bricksPath = path.resolve(__dirname, "bricks");module.exports = {	sources : require("codebricks-noodle").getSources(),	onStart : function(env) {		var brickTypes = env.methods.BrickTypes;			setup(function(repoBrick) {			brickTypes.getBrick({ id : "ideServer", batch : { depth : true } }, function(err, ideServer) { if (err) { env.log("error", JSON.stringify(err, null, 2));  return }							env.log("data", require("util").inspect(ideServer, null, null, true));					ideServer.start({}, function(err) { if (err) { env.log("error", JSON.stringify(err, null, 2));  return }													env.log("info", "Running IDE server...");					repoBrick.save({ brick : ideServer, batch : { depth : true } }, function(err) { if (err) { env.log("error", JSON.stringify(err, null, 2));  return }													env.log("info", "Brick SAVED!!!");					});				});			});		});				function setup(callback) {			brickTypes.createBrick("codebricks.brickRepositories.fileSystem", function(err, repoBrick) { if (err) { env.log("error", JSON.stringify(err, null, 2));  return }				repoBrick.path = bricksPath;				brickTypes.registerRepository(repoBrick, function(err) { if (err) { env.log("error", JSON.stringify(err, null, 2));  return }					callback(repoBrick);				});			});		}	}};